###################### Heroku Project Steps ###################

1. installed pip and python
2. set up heroku account - soupspring47@gmail.com
3. > pip install virtualenv (not req.)
4. > virtualenv --version

5. Created a heroku project folder on desktop
6. > virtualenv heroku_python_project

https://devcenter.heroku.com/articles/getting-started-with-python#set-up

7. Installing Heroku cmd line interface aka Toolbelt
8. Download Heroku CLI for Windows 64
9. INstall heroku, didnt install git as was already installed
10. Set heroku path to env variables
11. > heroku >email >password

12. created a folder heroku_project. Terminal into it. 
	> git init
	> git clone https://github.com/heroku/python-getting-started.git
    	> cd python-getting-started
-------------------------For any new app created, do this, as heroku is already installed and configured to an account, just create the heroku app and deploy----------------------
13. heroku create
14. git push heroku master

15. The application is now deployed. Ensure that at least one instance of the app is running:
	> heroku ps:scale web=1
16. > heroku open to open the app website


######################## Bit Bucket #############################

SET UP steps to add remote:

1. Create a new Repo (healthpredictor)
2. cd to local repo > git remote add origin https://Soup7@bitbucket.org/Soup7/healthpredictor.git
3. git push -u origin master

############### Access PC localhost from Android ################

If both your desktop and phone are connected to the same WiFi (or any other local network), 
then use your desktop IP address assigned by the router (not localhost and not 127.0.0.1).

To find out the IP address of your desktop:

    type into the command line ipconfig (Windows) or ifconfig (Unix)
    there's going to be a bunch of IP's
    try all of them (except the forementioned localhost and 127.0.0.1) {mostly LAN IPv4 address with port eg: 192.168.0.104:8080}

######################### TIPS #################################

- open CMD as admin
- To find and kill process : > netstat -ano|findstr 8080 > tskill <process-name>
- In Pycharm open the project structure, make the root as root folder
- added __init__.py files to folder you want to be recognized as modules

- Create the text file gitignore.txt.
  Open it in a text editor and add your rules, then save and close.
  Hold SHIFT, right click the folder you're in, then select Open command window here.
  Then rename the file in the command line, with ren gitignore.txt .gitignore.

############# Android Studio git-bitbucket set up ################

1. Open android studio -> VCS -> ENable VCS -> GIT
2. Modified git-ignore files
3. Created Repo in bitbucket.
4. cd to android app location -> git remote add origin https://Soup7@bitbucket.org/Soup7/androidhealthpredictor.git
5. git add -> commit -> push origin master

###################################################################

Run the tornado app - run main.py python file from PyCharm studio